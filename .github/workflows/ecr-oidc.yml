name: ecr-oidc
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  deploy:
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set environments
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Test
      run: 
        echo $RELEASE_VERSION
        echo ${{env.RELEASE_VERSION}}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: arn:aws:iam::849514089141:role/ecr-jose
        role-duration-seconds: 900
        aws-region: us-west-2
    - name: Test AWS Creds
      run: aws sts get-caller-identity
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::849514089141:role/ecr-jose
        role-duration-seconds: 900
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ secrets.REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: 
        docker system prune -a && cd crud && docker build -t docker push 849514089141.dkr.ecr.us-east-1.amazonaws.com/java-crud:$IMAGE_TAG . && docker images && docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
